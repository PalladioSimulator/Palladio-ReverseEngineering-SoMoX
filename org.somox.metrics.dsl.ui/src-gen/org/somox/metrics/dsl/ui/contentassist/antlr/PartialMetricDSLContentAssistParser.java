/*
 * generated by Xtext
 */
package org.somox.metrics.dsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Collections;

import org.eclipse.xtext.AbstractRule;
import org.eclipse.xtext.ui.codetemplates.ui.partialEditing.IPartialContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.util.PolymorphicDispatcher;

/**
 * @author Sebastian Zarnekow - Initial contribution and API
 */
@SuppressWarnings("restriction")
public class PartialMetricDSLContentAssistParser extends MetricDSLParser implements IPartialContentAssistParser {

    private AbstractRule rule;

    @Override
    public void initializeFor(final AbstractRule rule) {
        this.rule = rule;
    }

    @Override
    protected Collection<FollowElement> getFollowElements(final AbstractInternalContentAssistParser parser) {
        if (this.rule == null || this.rule.eIsProxy()) {
            return Collections.emptyList();
        }
        final String methodName = "entryRule" + this.rule.getName();
        final PolymorphicDispatcher<Collection<FollowElement>> dispatcher = new PolymorphicDispatcher<Collection<FollowElement>>(
                methodName, 0, 0, Collections.singletonList(parser));
        dispatcher.invoke();
        return parser.getFollowElements();
    }

}
