/*
* generated by Xtext
*/
grammar InternalMetricDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.somox.metrics.dsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.somox.metrics.dsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.somox.metrics.dsl.services.MetricDSLGrammarAccess;

}

@parser::members {
 
 	private MetricDSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MetricDSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleMetricModel
entryRuleMetricModel 
:
{ before(grammarAccess.getMetricModelRule()); }
	 ruleMetricModel
{ after(grammarAccess.getMetricModelRule()); } 
	 EOF 
;

// Rule MetricModel
ruleMetricModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMetricModelAccess().getGroup()); }
(rule__MetricModel__Group__0)
{ after(grammarAccess.getMetricModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleExternalMetric
entryRuleExternalMetric 
:
{ before(grammarAccess.getExternalMetricRule()); }
	 ruleExternalMetric
{ after(grammarAccess.getExternalMetricRule()); } 
	 EOF 
;

// Rule ExternalMetric
ruleExternalMetric
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExternalMetricAccess().getNameAssignment()); }
(rule__ExternalMetric__NameAssignment)
{ after(grammarAccess.getExternalMetricAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInternalMetric
entryRuleInternalMetric 
:
{ before(grammarAccess.getInternalMetricRule()); }
	 ruleInternalMetric
{ after(grammarAccess.getInternalMetricRule()); } 
	 EOF 
;

// Rule InternalMetric
ruleInternalMetric
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInternalMetricAccess().getGroup()); }
(rule__InternalMetric__Group__0)
{ after(grammarAccess.getInternalMetricAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumber
entryRuleNumber 
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberAccess().getAlternatives()); }
(rule__Number__Alternatives)
{ after(grammarAccess.getNumberAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstant
entryRuleConstant 
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAccess().getGroup()); }
(rule__Constant__Group__0)
{ after(grammarAccess.getConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMetricDefinition
entryRuleMetricDefinition 
:
{ before(grammarAccess.getMetricDefinitionRule()); }
	 ruleMetricDefinition
{ after(grammarAccess.getMetricDefinitionRule()); } 
	 EOF 
;

// Rule MetricDefinition
ruleMetricDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMetricDefinitionAccess().getAlternatives()); }
(rule__MetricDefinition__Alternatives)
{ after(grammarAccess.getMetricDefinitionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWeightedMetric
entryRuleWeightedMetric 
:
{ before(grammarAccess.getWeightedMetricRule()); }
	 ruleWeightedMetric
{ after(grammarAccess.getWeightedMetricRule()); } 
	 EOF 
;

// Rule WeightedMetric
ruleWeightedMetric
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWeightedMetricAccess().getGroup()); }
(rule__WeightedMetric__Group__0)
{ after(grammarAccess.getWeightedMetricAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStepwiseMetric
entryRuleStepwiseMetric 
:
{ before(grammarAccess.getStepwiseMetricRule()); }
	 ruleStepwiseMetric
{ after(grammarAccess.getStepwiseMetricRule()); } 
	 EOF 
;

// Rule StepwiseMetric
ruleStepwiseMetric
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStepwiseMetricAccess().getGroup()); }
(rule__StepwiseMetric__Group__0)
{ after(grammarAccess.getStepwiseMetricAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRatioMetric
entryRuleRatioMetric 
:
{ before(grammarAccess.getRatioMetricRule()); }
	 ruleRatioMetric
{ after(grammarAccess.getRatioMetricRule()); } 
	 EOF 
;

// Rule RatioMetric
ruleRatioMetric
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRatioMetricAccess().getGroup()); }
(rule__RatioMetric__Group__0)
{ after(grammarAccess.getRatioMetricAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBoundAndWeight
entryRuleBoundAndWeight 
:
{ before(grammarAccess.getBoundAndWeightRule()); }
	 ruleBoundAndWeight
{ after(grammarAccess.getBoundAndWeightRule()); } 
	 EOF 
;

// Rule BoundAndWeight
ruleBoundAndWeight
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBoundAndWeightAccess().getGroup()); }
(rule__BoundAndWeight__Group__0)
{ after(grammarAccess.getBoundAndWeightAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMetricAndWeight
entryRuleMetricAndWeight 
:
{ before(grammarAccess.getMetricAndWeightRule()); }
	 ruleMetricAndWeight
{ after(grammarAccess.getMetricAndWeightRule()); } 
	 EOF 
;

// Rule MetricAndWeight
ruleMetricAndWeight
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMetricAndWeightAccess().getGroup()); }
(rule__MetricAndWeight__Group__0)
{ after(grammarAccess.getMetricAndWeightAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMYID
entryRuleMYID 
:
{ before(grammarAccess.getMYIDRule()); }
	 ruleMYID
{ after(grammarAccess.getMYIDRule()); } 
	 EOF 
;

// Rule MYID
ruleMYID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMYIDAccess().getGroup()); }
(rule__MYID__Group__0)
{ after(grammarAccess.getMYIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__Number__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberAccess().getParameterParserRuleCall_0()); }
	ruleParameter
{ after(grammarAccess.getNumberAccess().getParameterParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNumberAccess().getConstantParserRuleCall_1()); }
	ruleConstant
{ after(grammarAccess.getNumberAccess().getConstantParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetricDefinition__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricDefinitionAccess().getWeightedMetricParserRuleCall_0()); }
	ruleWeightedMetric
{ after(grammarAccess.getMetricDefinitionAccess().getWeightedMetricParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMetricDefinitionAccess().getStepwiseMetricParserRuleCall_1()); }
	ruleStepwiseMetric
{ after(grammarAccess.getMetricDefinitionAccess().getStepwiseMetricParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getMetricDefinitionAccess().getRatioMetricParserRuleCall_2()); }
	ruleRatioMetric
{ after(grammarAccess.getMetricDefinitionAccess().getRatioMetricParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__MetricModel__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetricModel__Group__0__Impl
	rule__MetricModel__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricModelAccess().getGroup_0()); }
(rule__MetricModel__Group_0__0)*
{ after(grammarAccess.getMetricModelAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetricModel__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetricModel__Group__1__Impl
	rule__MetricModel__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricModelAccess().getGroup_1()); }
(rule__MetricModel__Group_1__0)*
{ after(grammarAccess.getMetricModelAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetricModel__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetricModel__Group__2__Impl
	rule__MetricModel__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricModelAccess().getMetricsKeyword_2()); }

	'Metrics' 

{ after(grammarAccess.getMetricModelAccess().getMetricsKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetricModel__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetricModel__Group__3__Impl
	rule__MetricModel__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricModelAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getMetricModelAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetricModel__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetricModel__Group__4__Impl
	rule__MetricModel__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMetricModelAccess().getMetricsAssignment_4()); }
(rule__MetricModel__MetricsAssignment_4)
{ after(grammarAccess.getMetricModelAccess().getMetricsAssignment_4()); }
)
(
{ before(grammarAccess.getMetricModelAccess().getMetricsAssignment_4()); }
(rule__MetricModel__MetricsAssignment_4)*
{ after(grammarAccess.getMetricModelAccess().getMetricsAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetricModel__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetricModel__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricModelAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getMetricModelAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__MetricModel__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetricModel__Group_0__0__Impl
	rule__MetricModel__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricModelAccess().getImportKeyword_0_0()); }

	'import' 

{ after(grammarAccess.getMetricModelAccess().getImportKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetricModel__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetricModel__Group_0__1__Impl
	rule__MetricModel__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricModelAccess().getImportURIAssignment_0_1()); }
(rule__MetricModel__ImportURIAssignment_0_1)
{ after(grammarAccess.getMetricModelAccess().getImportURIAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetricModel__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetricModel__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricModelAccess().getSemicolonKeyword_0_2()); }

	';' 

{ after(grammarAccess.getMetricModelAccess().getSemicolonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MetricModel__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetricModel__Group_1__0__Impl
	rule__MetricModel__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricModelAccess().getExternKeyword_1_0()); }

	'extern' 

{ after(grammarAccess.getMetricModelAccess().getExternKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetricModel__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetricModel__Group_1__1__Impl
	rule__MetricModel__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricModelAccess().getMetricsAssignment_1_1()); }
(rule__MetricModel__MetricsAssignment_1_1)
{ after(grammarAccess.getMetricModelAccess().getMetricsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetricModel__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetricModel__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricModelAccess().getSemicolonKeyword_1_2()); }

	';' 

{ after(grammarAccess.getMetricModelAccess().getSemicolonKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InternalMetric__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalMetric__Group__0__Impl
	rule__InternalMetric__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getMetricKeyword_0()); }

	'Metric' 

{ after(grammarAccess.getInternalMetricAccess().getMetricKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalMetric__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalMetric__Group__1__Impl
	rule__InternalMetric__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getNameAssignment_1()); }
(rule__InternalMetric__NameAssignment_1)
{ after(grammarAccess.getInternalMetricAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalMetric__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalMetric__Group__2__Impl
	rule__InternalMetric__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getInternalMetricAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalMetric__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalMetric__Group__3__Impl
	rule__InternalMetric__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getShortNameAssignment_3()); }
(rule__InternalMetric__ShortNameAssignment_3)
{ after(grammarAccess.getInternalMetricAccess().getShortNameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalMetric__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalMetric__Group__4__Impl
	rule__InternalMetric__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getInternalMetricAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalMetric__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalMetric__Group__5__Impl
	rule__InternalMetric__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getDescriptionAssignment_5()); }
(rule__InternalMetric__DescriptionAssignment_5)
{ after(grammarAccess.getInternalMetricAccess().getDescriptionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalMetric__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalMetric__Group__6__Impl
	rule__InternalMetric__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getInternalMetricAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalMetric__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalMetric__Group__7__Impl
	rule__InternalMetric__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getLeftCurlyBracketKeyword_7()); }

	'{' 

{ after(grammarAccess.getInternalMetricAccess().getLeftCurlyBracketKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalMetric__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalMetric__Group__8__Impl
	rule__InternalMetric__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getGroup_8()); }
(rule__InternalMetric__Group_8__0)?
{ after(grammarAccess.getInternalMetricAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalMetric__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalMetric__Group__9__Impl
	rule__InternalMetric__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getDefinitionAssignment_9()); }
(rule__InternalMetric__DefinitionAssignment_9)
{ after(grammarAccess.getInternalMetricAccess().getDefinitionAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalMetric__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalMetric__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getRightCurlyBracketSemicolonKeyword_10()); }

	'};' 

{ after(grammarAccess.getInternalMetricAccess().getRightCurlyBracketSemicolonKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__InternalMetric__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalMetric__Group_8__0__Impl
	rule__InternalMetric__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getParametersKeyword_8_0()); }

	'parameters' 

{ after(grammarAccess.getInternalMetricAccess().getParametersKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalMetric__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalMetric__Group_8__1__Impl
	rule__InternalMetric__Group_8__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getLeftCurlyBracketKeyword_8_1()); }

	'{' 

{ after(grammarAccess.getInternalMetricAccess().getLeftCurlyBracketKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalMetric__Group_8__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalMetric__Group_8__2__Impl
	rule__InternalMetric__Group_8__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__Group_8__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getParameterAssignment_8_2()); }
(rule__InternalMetric__ParameterAssignment_8_2)*
{ after(grammarAccess.getInternalMetricAccess().getParameterAssignment_8_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InternalMetric__Group_8__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InternalMetric__Group_8__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__Group_8__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getRightCurlyBracketKeyword_8_3()); }

	'}' 

{ after(grammarAccess.getInternalMetricAccess().getRightCurlyBracketKeyword_8_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getParameterKeyword_0()); }

	'Parameter' 

{ after(grammarAccess.getParameterAccess().getParameterKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
(rule__Parameter__NameAssignment_1)
{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getParameterAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__3__Impl
	rule__Parameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getShortnameAssignment_3()); }
(rule__Parameter__ShortnameAssignment_3)
{ after(grammarAccess.getParameterAccess().getShortnameAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__4__Impl
	rule__Parameter__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getParameterAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__5__Impl
	rule__Parameter__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getDescriptionAssignment_5()); }
(rule__Parameter__DescriptionAssignment_5)
{ after(grammarAccess.getParameterAccess().getDescriptionAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__6__Impl
	rule__Parameter__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getCommaKeyword_6()); }

	',' 

{ after(grammarAccess.getParameterAccess().getCommaKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__7__Impl
	rule__Parameter__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getDefaultValueAssignment_7()); }
(rule__Parameter__DefaultValueAssignment_7)
{ after(grammarAccess.getParameterAccess().getDefaultValueAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__8__Impl
	rule__Parameter__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getRightParenthesisKeyword_8()); }

	')' 

{ after(grammarAccess.getParameterAccess().getRightParenthesisKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getSemicolonKeyword_9()); }

	';' 

{ after(grammarAccess.getParameterAccess().getSemicolonKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Constant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__0__Impl
	rule__Constant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getConstKeyword_0()); }

	'Const' 

{ after(grammarAccess.getConstantAccess().getConstKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__1__Impl
	rule__Constant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameAssignment_1()); }
(rule__Constant__NameAssignment_1)
{ after(grammarAccess.getConstantAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__2__Impl
	rule__Constant__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getConstantAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__3__Impl
	rule__Constant__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getValueAssignment_3()); }
(rule__Constant__ValueAssignment_3)
{ after(grammarAccess.getConstantAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getConstantAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__WeightedMetric__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeightedMetric__Group__0__Impl
	rule__WeightedMetric__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WeightedMetric__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeightedMetricAccess().getWeigthedSumKeyword_0()); }

	'WeigthedSum' 

{ after(grammarAccess.getWeightedMetricAccess().getWeigthedSumKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeightedMetric__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeightedMetric__Group__1__Impl
	rule__WeightedMetric__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WeightedMetric__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeightedMetricAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getWeightedMetricAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeightedMetric__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeightedMetric__Group__2__Impl
	rule__WeightedMetric__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WeightedMetric__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getWeightedMetricAccess().getWeightsAssignment_2()); }
(rule__WeightedMetric__WeightsAssignment_2)
{ after(grammarAccess.getWeightedMetricAccess().getWeightsAssignment_2()); }
)
(
{ before(grammarAccess.getWeightedMetricAccess().getWeightsAssignment_2()); }
(rule__WeightedMetric__WeightsAssignment_2)*
{ after(grammarAccess.getWeightedMetricAccess().getWeightsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeightedMetric__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeightedMetric__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WeightedMetric__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeightedMetricAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getWeightedMetricAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__StepwiseMetric__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StepwiseMetric__Group__0__Impl
	rule__StepwiseMetric__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StepwiseMetric__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepwiseMetricAccess().getStepwiseKeyword_0()); }

	'Stepwise' 

{ after(grammarAccess.getStepwiseMetricAccess().getStepwiseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StepwiseMetric__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StepwiseMetric__Group__1__Impl
	rule__StepwiseMetric__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StepwiseMetric__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepwiseMetricAccess().getLeftSquareBracketKeyword_1()); }

	'[' 

{ after(grammarAccess.getStepwiseMetricAccess().getLeftSquareBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StepwiseMetric__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StepwiseMetric__Group__2__Impl
	rule__StepwiseMetric__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StepwiseMetric__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepwiseMetricAccess().getInnerMetricAssignment_2()); }
(rule__StepwiseMetric__InnerMetricAssignment_2)
{ after(grammarAccess.getStepwiseMetricAccess().getInnerMetricAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StepwiseMetric__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StepwiseMetric__Group__3__Impl
	rule__StepwiseMetric__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StepwiseMetric__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepwiseMetricAccess().getRightSquareBracketKeyword_3()); }

	']' 

{ after(grammarAccess.getStepwiseMetricAccess().getRightSquareBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StepwiseMetric__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StepwiseMetric__Group__4__Impl
	rule__StepwiseMetric__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__StepwiseMetric__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepwiseMetricAccess().getLeftCurlyBracketKeyword_4()); }

	'{' 

{ after(grammarAccess.getStepwiseMetricAccess().getLeftCurlyBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StepwiseMetric__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StepwiseMetric__Group__5__Impl
	rule__StepwiseMetric__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__StepwiseMetric__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepwiseMetricAccess().getStepsAssignment_5()); }
(rule__StepwiseMetric__StepsAssignment_5)*
{ after(grammarAccess.getStepwiseMetricAccess().getStepsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StepwiseMetric__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StepwiseMetric__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StepwiseMetric__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepwiseMetricAccess().getRightCurlyBracketKeyword_6()); }

	'}' 

{ after(grammarAccess.getStepwiseMetricAccess().getRightCurlyBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__RatioMetric__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RatioMetric__Group__0__Impl
	rule__RatioMetric__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RatioMetric__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRatioMetricAccess().getRatioKeyword_0()); }

	'Ratio' 

{ after(grammarAccess.getRatioMetricAccess().getRatioKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RatioMetric__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RatioMetric__Group__1__Impl
	rule__RatioMetric__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RatioMetric__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRatioMetricAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getRatioMetricAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RatioMetric__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RatioMetric__Group__2__Impl
	rule__RatioMetric__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RatioMetric__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRatioMetricAccess().getNominatorMetricAssignment_2()); }
(rule__RatioMetric__NominatorMetricAssignment_2)
{ after(grammarAccess.getRatioMetricAccess().getNominatorMetricAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RatioMetric__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RatioMetric__Group__3__Impl
	rule__RatioMetric__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RatioMetric__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRatioMetricAccess().getSolidusKeyword_3()); }

	'/' 

{ after(grammarAccess.getRatioMetricAccess().getSolidusKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RatioMetric__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RatioMetric__Group__4__Impl
	rule__RatioMetric__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RatioMetric__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRatioMetricAccess().getDenominatorMetricAssignment_4()); }
(rule__RatioMetric__DenominatorMetricAssignment_4)
{ after(grammarAccess.getRatioMetricAccess().getDenominatorMetricAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RatioMetric__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RatioMetric__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RatioMetric__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRatioMetricAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getRatioMetricAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__BoundAndWeight__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoundAndWeight__Group__0__Impl
	rule__BoundAndWeight__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundAndWeight__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoundAndWeightAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getBoundAndWeightAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BoundAndWeight__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoundAndWeight__Group__1__Impl
	rule__BoundAndWeight__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundAndWeight__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoundAndWeightAccess().getUpperBoundAssignment_1()); }
(rule__BoundAndWeight__UpperBoundAssignment_1)
{ after(grammarAccess.getBoundAndWeightAccess().getUpperBoundAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BoundAndWeight__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoundAndWeight__Group__2__Impl
	rule__BoundAndWeight__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundAndWeight__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoundAndWeightAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getBoundAndWeightAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BoundAndWeight__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoundAndWeight__Group__3__Impl
	rule__BoundAndWeight__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundAndWeight__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoundAndWeightAccess().getWeightAssignment_3()); }
(rule__BoundAndWeight__WeightAssignment_3)
{ after(grammarAccess.getBoundAndWeightAccess().getWeightAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__BoundAndWeight__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__BoundAndWeight__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BoundAndWeight__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoundAndWeightAccess().getGreaterThanSignKeyword_4()); }

	'>' 

{ after(grammarAccess.getBoundAndWeightAccess().getGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MetricAndWeight__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetricAndWeight__Group__0__Impl
	rule__MetricAndWeight__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricAndWeight__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricAndWeightAccess().getLessThanSignKeyword_0()); }

	'<' 

{ after(grammarAccess.getMetricAndWeightAccess().getLessThanSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetricAndWeight__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetricAndWeight__Group__1__Impl
	rule__MetricAndWeight__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricAndWeight__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricAndWeightAccess().getMetricAssignment_1()); }
(rule__MetricAndWeight__MetricAssignment_1)
{ after(grammarAccess.getMetricAndWeightAccess().getMetricAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetricAndWeight__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetricAndWeight__Group__2__Impl
	rule__MetricAndWeight__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricAndWeight__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricAndWeightAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getMetricAndWeightAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetricAndWeight__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetricAndWeight__Group__3__Impl
	rule__MetricAndWeight__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricAndWeight__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricAndWeightAccess().getWeightAssignment_3()); }
(rule__MetricAndWeight__WeightAssignment_3)
{ after(grammarAccess.getMetricAndWeightAccess().getWeightAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MetricAndWeight__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MetricAndWeight__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MetricAndWeight__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricAndWeightAccess().getGreaterThanSignKeyword_4()); }

	'>' 

{ after(grammarAccess.getMetricAndWeightAccess().getGreaterThanSignKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MYID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MYID__Group__0__Impl
	rule__MYID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MYID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMYIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getMYIDAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MYID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MYID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MYID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMYIDAccess().getGroup_1()); }
(rule__MYID__Group_1__0)*
{ after(grammarAccess.getMYIDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MYID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MYID__Group_1__0__Impl
	rule__MYID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MYID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMYIDAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getMYIDAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MYID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MYID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MYID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMYIDAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getMYIDAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__MetricModel__ImportURIAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricModelAccess().getImportURISTRINGTerminalRuleCall_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getMetricModelAccess().getImportURISTRINGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__MetricsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricModelAccess().getMetricsExternalMetricParserRuleCall_1_1_0()); }
	ruleExternalMetric{ after(grammarAccess.getMetricModelAccess().getMetricsExternalMetricParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetricModel__MetricsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricModelAccess().getMetricsInternalMetricParserRuleCall_4_0()); }
	ruleInternalMetric{ after(grammarAccess.getMetricModelAccess().getMetricsInternalMetricParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExternalMetric__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExternalMetricAccess().getNameMYIDParserRuleCall_0()); }
	ruleMYID{ after(grammarAccess.getExternalMetricAccess().getNameMYIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getNameMYIDParserRuleCall_1_0()); }
	ruleMYID{ after(grammarAccess.getInternalMetricAccess().getNameMYIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__ShortNameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getShortNameSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getInternalMetricAccess().getShortNameSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__DescriptionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getDescriptionSTRINGTerminalRuleCall_5_0()); }
	RULE_STRING{ after(grammarAccess.getInternalMetricAccess().getDescriptionSTRINGTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__ParameterAssignment_8_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getParameterNumberParserRuleCall_8_2_0()); }
	ruleNumber{ after(grammarAccess.getInternalMetricAccess().getParameterNumberParserRuleCall_8_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InternalMetric__DefinitionAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInternalMetricAccess().getDefinitionMetricDefinitionParserRuleCall_9_0()); }
	ruleMetricDefinition{ after(grammarAccess.getInternalMetricAccess().getDefinitionMetricDefinitionParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameMYIDParserRuleCall_1_0()); }
	ruleMYID{ after(grammarAccess.getParameterAccess().getNameMYIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ShortnameAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getShortnameSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getParameterAccess().getShortnameSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__DescriptionAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getDescriptionSTRINGTerminalRuleCall_5_0()); }
	RULE_STRING{ after(grammarAccess.getParameterAccess().getDescriptionSTRINGTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__DefaultValueAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getDefaultValueDOUBLETerminalRuleCall_7_0()); }
	RULE_DOUBLE{ after(grammarAccess.getParameterAccess().getDefaultValueDOUBLETerminalRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameMYIDParserRuleCall_1_0()); }
	ruleMYID{ after(grammarAccess.getConstantAccess().getNameMYIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getValueDOUBLETerminalRuleCall_3_0()); }
	RULE_DOUBLE{ after(grammarAccess.getConstantAccess().getValueDOUBLETerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeightedMetric__WeightsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeightedMetricAccess().getWeightsMetricAndWeightParserRuleCall_2_0()); }
	ruleMetricAndWeight{ after(grammarAccess.getWeightedMetricAccess().getWeightsMetricAndWeightParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StepwiseMetric__InnerMetricAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepwiseMetricAccess().getInnerMetricMetricCrossReference_2_0()); }
(
{ before(grammarAccess.getStepwiseMetricAccess().getInnerMetricMetricMYIDParserRuleCall_2_0_1()); }
	ruleMYID{ after(grammarAccess.getStepwiseMetricAccess().getInnerMetricMetricMYIDParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getStepwiseMetricAccess().getInnerMetricMetricCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StepwiseMetric__StepsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStepwiseMetricAccess().getStepsBoundAndWeightParserRuleCall_5_0()); }
	ruleBoundAndWeight{ after(grammarAccess.getStepwiseMetricAccess().getStepsBoundAndWeightParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RatioMetric__NominatorMetricAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRatioMetricAccess().getNominatorMetricMetricCrossReference_2_0()); }
(
{ before(grammarAccess.getRatioMetricAccess().getNominatorMetricMetricMYIDParserRuleCall_2_0_1()); }
	ruleMYID{ after(grammarAccess.getRatioMetricAccess().getNominatorMetricMetricMYIDParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRatioMetricAccess().getNominatorMetricMetricCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RatioMetric__DenominatorMetricAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRatioMetricAccess().getDenominatorMetricMetricCrossReference_4_0()); }
(
{ before(grammarAccess.getRatioMetricAccess().getDenominatorMetricMetricMYIDParserRuleCall_4_0_1()); }
	ruleMYID{ after(grammarAccess.getRatioMetricAccess().getDenominatorMetricMetricMYIDParserRuleCall_4_0_1()); }
)
{ after(grammarAccess.getRatioMetricAccess().getDenominatorMetricMetricCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoundAndWeight__UpperBoundAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoundAndWeightAccess().getUpperBoundNumberCrossReference_1_0()); }
(
{ before(grammarAccess.getBoundAndWeightAccess().getUpperBoundNumberMYIDParserRuleCall_1_0_1()); }
	ruleMYID{ after(grammarAccess.getBoundAndWeightAccess().getUpperBoundNumberMYIDParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getBoundAndWeightAccess().getUpperBoundNumberCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BoundAndWeight__WeightAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBoundAndWeightAccess().getWeightNumberCrossReference_3_0()); }
(
{ before(grammarAccess.getBoundAndWeightAccess().getWeightNumberMYIDParserRuleCall_3_0_1()); }
	ruleMYID{ after(grammarAccess.getBoundAndWeightAccess().getWeightNumberMYIDParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getBoundAndWeightAccess().getWeightNumberCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetricAndWeight__MetricAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricAndWeightAccess().getMetricMetricCrossReference_1_0()); }
(
{ before(grammarAccess.getMetricAndWeightAccess().getMetricMetricMYIDParserRuleCall_1_0_1()); }
	ruleMYID{ after(grammarAccess.getMetricAndWeightAccess().getMetricMetricMYIDParserRuleCall_1_0_1()); }
)
{ after(grammarAccess.getMetricAndWeightAccess().getMetricMetricCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MetricAndWeight__WeightAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMetricAndWeightAccess().getWeightNumberCrossReference_3_0()); }
(
{ before(grammarAccess.getMetricAndWeightAccess().getWeightNumberMYIDParserRuleCall_3_0_1()); }
	ruleMYID{ after(grammarAccess.getMetricAndWeightAccess().getWeightNumberMYIDParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getMetricAndWeightAccess().getWeightNumberCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_DOUBLE : '-'? RULE_INT '.' RULE_INT;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


